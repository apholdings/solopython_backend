# Generated by Django 3.2.16 on 2023-06-05 17:47

import apps.courses.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('is_accepted_answer', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('token_id', models.TextField(blank=True, null=True, unique=True)),
                ('nft_address', models.CharField(blank=True, default=0, max_length=256, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('short_description', models.TextField(blank=True, max_length=169, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_rating', models.IntegerField(blank=True, default=0, null=True)),
                ('stock', models.IntegerField(blank=True, default=0, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('compare_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('discount_until', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('discount', models.BooleanField(default=False)),
                ('payment', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], default='unpaid', max_length=100)),
                ('language', models.CharField(blank=True, choices=[('español', 'Español'), ('ingles', 'Ingles')], max_length=50, null=True)),
                ('level', models.CharField(blank=True, max_length=50, null=True)),
                ('taught', models.CharField(blank=True, max_length=120, null=True)),
                ('welcome_message', models.CharField(blank=True, max_length=1200, null=True)),
                ('congrats_message', models.CharField(blank=True, max_length=1200, null=True)),
                ('sold', models.IntegerField(blank=True, default=0)),
                ('course_length', models.CharField(blank=True, default=0, max_length=20, null=True)),
                ('students', models.IntegerField(blank=True, default=0)),
                ('views', models.IntegerField(blank=True, default=0)),
                ('best_seller', models.BooleanField(default=False)),
                ('goals', models.BooleanField(default=False)),
                ('course_structure', models.BooleanField(default=False)),
                ('setup', models.BooleanField(default=False)),
                ('film', models.BooleanField(default=False)),
                ('curriculum', models.BooleanField(default=False)),
                ('captions', models.BooleanField(default=False)),
                ('accessibility', models.BooleanField(default=False)),
                ('landing_page', models.BooleanField(default=False)),
                ('pricing', models.BooleanField(default=False)),
                ('promotions', models.BooleanField(default=False)),
                ('allow_messages', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=True)),
                ('banned', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='episodes')),
                ('filename', models.CharField(blank=True, max_length=1200, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=1200, null=True)),
                ('length', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
                ('free', models.BooleanField(blank=True, default=False, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('section_uuid', models.UUIDField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now=True, null=True)),
                ('published', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='EpisodeCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=60, null=True)),
                ('file', models.FileField(upload_to='marketplace/courses/media')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('document', 'Document'), ('video', 'Video')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PaidCoursesList',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=120)),
                ('body', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now_add=True)),
                ('has_accepted_answer', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='Requisite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to=apps.courses.models.course_directory_path)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('learning_objective', models.CharField(blank=True, max_length=1200, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='Sellers',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ViewCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Viewed',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ViewedCoursesLibrary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Viewed Courses',
            },
        ),
        migrations.CreateModel(
            name='ViewedItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WhatLearnt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='WhoIsFor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='course_analytics_reverse', serialize=False, to='courses.course')),
                ('views', models.IntegerField(blank=True, default=0)),
                ('clicks', models.IntegerField(blank=True, default=0, null=True)),
                ('impressions', models.IntegerField(blank=True, default=0, null=True)),
                ('clickThroughRate', models.FloatField(blank=True, default=0, null=True)),
                ('purchases', models.IntegerField(blank=True, default=0, null=True)),
                ('conversion_rate', models.FloatField(blank=True, default=0, null=True)),
                ('avg_time_on_page', models.FloatField(blank=True, default=0, null=True)),
                ('sold', models.IntegerField(blank=True, default=0, null=True)),
                ('income_earned', models.PositiveIntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('total_items', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('courses', models.ManyToManyField(to='courses.Course')),
            ],
        ),
    ]
